#!/usr/bin/env bash
# Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -o errexit
set -o nounset
set -o pipefail

SCRIPT_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/" && pwd -P)"

PROJECT_MOUNT=$(realpath .)
GOLANG_VERSION=$(cat $SCRIPT_ROOT/.goversion)
USE_DOCKER=$(cat $SCRIPT_ROOT/.usedocker)
CONTAINER_IMAGE="public.ecr.aws/k1e6s8o8/go-licenses:${GOLANG_VERSION}-latest"

EXTRA_MOUNTS=""
ARGS=()
while test $# -gt 0; do
  case "$1" in
    --save_path)
        shift
        OUTPUT_MOUNT="$1"
        EXTRA_MOUNTS="--mount type=bind,source=$(dirname $OUTPUT_MOUNT),target=/output"
        ARGS+=("--save_path" "/output/$(basename $OUTPUT_MOUNT)")
        mkdir -p $OUTPUT_MOUNT
        shift
        ;;
    *)
        ARGS+=("$1")
        shift
        ;;
  esac
done

if [[ "$USE_DOCKER" = "true" ]] ; then
    docker run \
        --mount type=bind,source=$PROJECT_MOUNT,target=/project $EXTRA_MOUNTS -w /project \
        -e GOFLAGS=$GOFLAGS -e GOOS=$GOOS -e GOARCH=$GOARCH \
        $CONTAINER_IMAGE "${ARGS[@]}"

    exit $?
fi

echo "go-licenses not available and docker not running!"
exit 1

